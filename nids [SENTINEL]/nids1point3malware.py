from nids1point3streams import Stream, StreamId
from collections import defaultdict
from scapy.all import sniff, IP, TCP
import hashlib

streams=defaultdict(lambda: Stream())

known_hashes={
    'b3f067e63fff8e171ee26bcde6a6010737c8b22c': 'Lokibot',
    '73480f2548244fb6a3e9db83a4e74082dd2fa500': 'Lokibot',
    'efbd4555c4b881d77d28f659289373a813e79650': 'TeslaCrypt',
    '13427e27f405ea2c818d4f55745cd9fb9e336134': 'TeslaCrypt'
}

def logger(p):
    if p.haslayer(TCP) and p[TCP].sport==80:
        sid=StreamId(p[IP].src,p[TCP].sport,p[IP].dst,p[TCP].dport); s=streams[sid]
        if s.process_p(p):
            del streams[sid]; prcs(s.data, sid)

def prcs(data, id):
    try:
        if (hv:=hashlib.sha1(data[data.find(b"\r\n\r\n")+len(b"\r\n\r\n"):]).hexdigest()) in known_hashes: print(f"*ALERT* Malware detected in HTTP download! Client: {id.dst_ip}; Server: {id.src_ip}; Hash: {hv} ({known_hashes[hv]})")
    except Exception as e:
        print(f"skill issue bruh: {e}")

print("starting packet capture...")
sniff(iface="vmenet3", prn=logger)